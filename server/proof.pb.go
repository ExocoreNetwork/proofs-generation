// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proof.proto

package main

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidatorProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot           uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	ValidatorIndex uint64 `protobuf:"varint,2,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
}

func (x *ValidatorProofRequest) Reset() {
	*x = ValidatorProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proof_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorProofRequest) ProtoMessage() {}

func (x *ValidatorProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proof_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorProofRequest.ProtoReflect.Descriptor instead.
func (*ValidatorProofRequest) Descriptor() ([]byte, []int) {
	return file_proof_proto_rawDescGZIP(), []int{0}
}

func (x *ValidatorProofRequest) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ValidatorProofRequest) GetValidatorIndex() uint64 {
	if x != nil {
		return x.ValidatorIndex
	}
	return 0
}

type ValidatorProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRoot               []byte   `protobuf:"bytes,1,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	StateRootProof          [][]byte `protobuf:"bytes,2,rep,name=state_root_proof,json=stateRootProof,proto3" json:"state_root_proof,omitempty"`
	ValidatorContainer      []string `protobuf:"bytes,3,rep,name=validator_container,json=validatorContainer,proto3" json:"validator_container,omitempty"`
	ValidatorContainerProof [][]byte `protobuf:"bytes,4,rep,name=validator_container_proof,json=validatorContainerProof,proto3" json:"validator_container_proof,omitempty"`
}

func (x *ValidatorProofResponse) Reset() {
	*x = ValidatorProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proof_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorProofResponse) ProtoMessage() {}

func (x *ValidatorProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proof_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorProofResponse.ProtoReflect.Descriptor instead.
func (*ValidatorProofResponse) Descriptor() ([]byte, []int) {
	return file_proof_proto_rawDescGZIP(), []int{1}
}

func (x *ValidatorProofResponse) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *ValidatorProofResponse) GetStateRootProof() [][]byte {
	if x != nil {
		return x.StateRootProof
	}
	return nil
}

func (x *ValidatorProofResponse) GetValidatorContainer() []string {
	if x != nil {
		return x.ValidatorContainer
	}
	return nil
}

func (x *ValidatorProofResponse) GetValidatorContainerProof() [][]byte {
	if x != nil {
		return x.ValidatorContainerProof
	}
	return nil
}

type WithdrawalProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateSlot      uint64 `protobuf:"varint,1,opt,name=state_slot,json=stateSlot,proto3" json:"state_slot,omitempty"`
	WithdrawalSlot uint64 `protobuf:"varint,2,opt,name=withdrawal_slot,json=withdrawalSlot,proto3" json:"withdrawal_slot,omitempty"`
	ValidatorIndex uint64 `protobuf:"varint,3,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
}

func (x *WithdrawalProofRequest) Reset() {
	*x = WithdrawalProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proof_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalProofRequest) ProtoMessage() {}

func (x *WithdrawalProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proof_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalProofRequest.ProtoReflect.Descriptor instead.
func (*WithdrawalProofRequest) Descriptor() ([]byte, []int) {
	return file_proof_proto_rawDescGZIP(), []int{2}
}

func (x *WithdrawalProofRequest) GetStateSlot() uint64 {
	if x != nil {
		return x.StateSlot
	}
	return 0
}

func (x *WithdrawalProofRequest) GetWithdrawalSlot() uint64 {
	if x != nil {
		return x.WithdrawalSlot
	}
	return 0
}

func (x *WithdrawalProofRequest) GetValidatorIndex() uint64 {
	if x != nil {
		return x.ValidatorIndex
	}
	return 0
}

type WithdrawalProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateRoot                       []byte   `protobuf:"bytes,1,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	StateRootProof                  [][]byte `protobuf:"bytes,2,rep,name=state_root_proof,json=stateRootProof,proto3" json:"state_root_proof,omitempty"`
	ValidatorContainer              []string `protobuf:"bytes,3,rep,name=validator_container,json=validatorContainer,proto3" json:"validator_container,omitempty"`
	ValidatorContainerProof         [][]byte `protobuf:"bytes,4,rep,name=validator_container_proof,json=validatorContainerProof,proto3" json:"validator_container_proof,omitempty"`
	HistoricalSummaryBlockRoot      []byte   `protobuf:"bytes,5,opt,name=historical_summary_block_root,json=historicalSummaryBlockRoot,proto3" json:"historical_summary_block_root,omitempty"`
	HistoricalSummaryBlockRootProof [][]byte `protobuf:"bytes,6,rep,name=historical_summary_block_root_proof,json=historicalSummaryBlockRootProof,proto3" json:"historical_summary_block_root_proof,omitempty"`
	SlotRoot                        []byte   `protobuf:"bytes,7,opt,name=slot_root,json=slotRoot,proto3" json:"slot_root,omitempty"`
	SlotRootProof                   [][]byte `protobuf:"bytes,8,rep,name=slot_root_proof,json=slotRootProof,proto3" json:"slot_root_proof,omitempty"`
	TimestampRoot                   []byte   `protobuf:"bytes,9,opt,name=timestamp_root,json=timestampRoot,proto3" json:"timestamp_root,omitempty"`
	TimestampRootProof              [][]byte `protobuf:"bytes,10,rep,name=timestamp_root_proof,json=timestampRootProof,proto3" json:"timestamp_root_proof,omitempty"`
	ExecutionPayloadRoot            []byte   `protobuf:"bytes,11,opt,name=execution_payload_root,json=executionPayloadRoot,proto3" json:"execution_payload_root,omitempty"`
	ExecutionPayloadRootProof       [][]byte `protobuf:"bytes,12,rep,name=execution_payload_root_proof,json=executionPayloadRootProof,proto3" json:"execution_payload_root_proof,omitempty"`
	WithdrawalContainer             [][]byte `protobuf:"bytes,13,rep,name=withdrawal_container,json=withdrawalContainer,proto3" json:"withdrawal_container,omitempty"`
	WithdrawalContainerProof        [][]byte `protobuf:"bytes,14,rep,name=withdrawal_container_proof,json=withdrawalContainerProof,proto3" json:"withdrawal_container_proof,omitempty"`
	HistoricalSummaryIndex          uint64   `protobuf:"varint,15,opt,name=historical_summary_index,json=historicalSummaryIndex,proto3" json:"historical_summary_index,omitempty"`
	BlockRootIndex                  uint64   `protobuf:"varint,16,opt,name=block_root_index,json=blockRootIndex,proto3" json:"block_root_index,omitempty"`
	WithdrawalIndexWithinBlock      uint64   `protobuf:"varint,17,opt,name=withdrawal_index_within_block,json=withdrawalIndexWithinBlock,proto3" json:"withdrawal_index_within_block,omitempty"`
}

func (x *WithdrawalProofResponse) Reset() {
	*x = WithdrawalProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proof_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalProofResponse) ProtoMessage() {}

func (x *WithdrawalProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proof_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawalProofResponse.ProtoReflect.Descriptor instead.
func (*WithdrawalProofResponse) Descriptor() ([]byte, []int) {
	return file_proof_proto_rawDescGZIP(), []int{3}
}

func (x *WithdrawalProofResponse) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *WithdrawalProofResponse) GetStateRootProof() [][]byte {
	if x != nil {
		return x.StateRootProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetValidatorContainer() []string {
	if x != nil {
		return x.ValidatorContainer
	}
	return nil
}

func (x *WithdrawalProofResponse) GetValidatorContainerProof() [][]byte {
	if x != nil {
		return x.ValidatorContainerProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetHistoricalSummaryBlockRoot() []byte {
	if x != nil {
		return x.HistoricalSummaryBlockRoot
	}
	return nil
}

func (x *WithdrawalProofResponse) GetHistoricalSummaryBlockRootProof() [][]byte {
	if x != nil {
		return x.HistoricalSummaryBlockRootProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetSlotRoot() []byte {
	if x != nil {
		return x.SlotRoot
	}
	return nil
}

func (x *WithdrawalProofResponse) GetSlotRootProof() [][]byte {
	if x != nil {
		return x.SlotRootProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetTimestampRoot() []byte {
	if x != nil {
		return x.TimestampRoot
	}
	return nil
}

func (x *WithdrawalProofResponse) GetTimestampRootProof() [][]byte {
	if x != nil {
		return x.TimestampRootProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetExecutionPayloadRoot() []byte {
	if x != nil {
		return x.ExecutionPayloadRoot
	}
	return nil
}

func (x *WithdrawalProofResponse) GetExecutionPayloadRootProof() [][]byte {
	if x != nil {
		return x.ExecutionPayloadRootProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetWithdrawalContainer() [][]byte {
	if x != nil {
		return x.WithdrawalContainer
	}
	return nil
}

func (x *WithdrawalProofResponse) GetWithdrawalContainerProof() [][]byte {
	if x != nil {
		return x.WithdrawalContainerProof
	}
	return nil
}

func (x *WithdrawalProofResponse) GetHistoricalSummaryIndex() uint64 {
	if x != nil {
		return x.HistoricalSummaryIndex
	}
	return 0
}

func (x *WithdrawalProofResponse) GetBlockRootIndex() uint64 {
	if x != nil {
		return x.BlockRootIndex
	}
	return 0
}

func (x *WithdrawalProofResponse) GetWithdrawalIndexWithinBlock() uint64 {
	if x != nil {
		return x.WithdrawalIndexWithinBlock
	}
	return 0
}

var File_proof_proto protoreflect.FileDescriptor

var file_proof_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x54, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x2f, 0x0a, 0x13,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3a, 0x0a,
	0x19, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8d, 0x07, 0x0a, 0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x2f, 0x0a, 0x13, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x41, 0x0a, 0x1d, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x4c, 0x0a, 0x23, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x1f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x63, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x73, 0x6c, 0x6f,
	0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d,
	0x73, 0x6c, 0x6f, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x6f, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x6f, 0x6f,
	0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x1c,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x19, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x31, 0x0a,
	0x14, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x13, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x18, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x38,
	0x0a, 0x18, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x16, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x41, 0x0a, 0x1d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x57, 0x69, 0x74, 0x68, 0x69, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x32, 0xf6, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x74, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x2d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x42,
	0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x78, 0x6f,
	0x63, 0x6f, 0x72, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x65, 0x69, 0x67, 0x65,
	0x6e, 0x70, 0x6f, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2d, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proof_proto_rawDescOnce sync.Once
	file_proof_proto_rawDescData = file_proof_proto_rawDesc
)

func file_proof_proto_rawDescGZIP() []byte {
	file_proof_proto_rawDescOnce.Do(func() {
		file_proof_proto_rawDescData = protoimpl.X.CompressGZIP(file_proof_proto_rawDescData)
	})
	return file_proof_proto_rawDescData
}

var file_proof_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proof_proto_goTypes = []any{
	(*ValidatorProofRequest)(nil),   // 0: proof.ValidatorProofRequest
	(*ValidatorProofResponse)(nil),  // 1: proof.ValidatorProofResponse
	(*WithdrawalProofRequest)(nil),  // 2: proof.WithdrawalProofRequest
	(*WithdrawalProofResponse)(nil), // 3: proof.WithdrawalProofResponse
}
var file_proof_proto_depIdxs = []int32{
	0, // 0: proof.ProofService.GetValidatorProof:input_type -> proof.ValidatorProofRequest
	2, // 1: proof.ProofService.GetWithdrawalProof:input_type -> proof.WithdrawalProofRequest
	1, // 2: proof.ProofService.GetValidatorProof:output_type -> proof.ValidatorProofResponse
	3, // 3: proof.ProofService.GetWithdrawalProof:output_type -> proof.WithdrawalProofResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proof_proto_init() }
func file_proof_proto_init() {
	if File_proof_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proof_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ValidatorProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proof_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ValidatorProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proof_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawalProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proof_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WithdrawalProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proof_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proof_proto_goTypes,
		DependencyIndexes: file_proof_proto_depIdxs,
		MessageInfos:      file_proof_proto_msgTypes,
	}.Build()
	File_proof_proto = out.File
	file_proof_proto_rawDesc = nil
	file_proof_proto_goTypes = nil
	file_proof_proto_depIdxs = nil
}
